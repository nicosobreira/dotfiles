#!/usr/bin/env bash

set -eou pipefail
# set -x

SCRIPT_FILE=$(realpath $0)

WGET_OUTPUT="-q --show-progress"
DEPENDENCIES="curl wget"

PREFIX="$HOME/.local"
OBSIDIAN="$PREFIX/obsidian-app"

NAME="Obsidian-App"
ICON="$OBSIDIAN/icon.svg"
CURRENT_VERSION_FILE="$OBSIDIAN/current-version.txt"
APP_IMAGE="$OBSIDIAN/Obsidian.AppImage"
DESKTOP="$PREFIX/share/applications/obsidian-app.desktop"

get_latest_repo_version() {
	local git_user_name=$1
	local git_repo=$2
	local tag_name_pre=${3:-"v"}
	curl -s "https://api.github.com/repos/${git_user_name}/${git_repo}/releases/latest" | \
		grep -oP "\"tag_name\": \"${tag_name_pre}\K[0-9.]+" | \
		head -1
}

init_folders() {
	if [[ ! -d $OBSIDIAN ]]; then
		mkdir -p "$OBSIDIAN"
	fi
	if [[ ! -d $PREFIX/share/applications ]]; then
		mkdir -p "$PREFIX/share/applications"
	fi
}

install_dependencies() {
	echo -e "\tInstalling dependencies"
	sudo apt-get install $DEPENDENCIES -y
}

get_icon () {
	if [[ -f "$ICON" ]]; then
		echo "$ICON is already downloaded"
		return
	fi

	echo -e "\tDownloading $ICON"
	wget "$WGET_OUTPUT" -O "$ICON" "https://obsidian.md/images/obsidian-logo-gradient.svg"
}

get_obsidian() {
	init_folders
	install_dependencies
	local latest_version=$(get_latest_repo_version "obsidianmd" "obsidian-releases" "v")
	local current_version=$(cat "$CURRENT_VERSION_FILE" 2>/dev/null)

	if [[ $latest_version == $current_version ]]; then
		echo -e "\tAlready update"
		return
	fi
	echo -e "\tInstalling Obsidian"

	get_icon

	wget "$WGET_OUTPUT" -O "$APP_IMAGE" "https://github.com/obsidianmd/obsidian-releases/releases/download/v$latest_version/Obsidian-$latest_version.AppImage"
	chmod u+x "$APP_IMAGE"

	create_desktop

	echo $latest_version > "$CURRENT_VERSION_FILE"
}

create_desktop() {
	echo -e "\tCreating $DESKTOP"
	cat > "$DESKTOP" << EOF
[Desktop Entry]
Type=Application
Name=$NAME
Exec=$SCRIPT_FILE run
Icon=$ICON
Terminal=false
EOF
	chmod u+x $DESKTOP
}

get_user_choice() {
	message=$1
	local input
	while true; do
		read -p "$message [Y/N] " input
		case "$input" in
			[Yy]) return 0;;
			[Nn]) return 1;;
			*) echo "Press \"Y\" or \"N\""
		esac
	done
}

show_help() {
	cat << EOF
Usage: obsidian-app [ARGUMENTS]

ARGUMENTS:
        run               Run Obsidian AppImage
        update/install    Update Obsidian
        remove            Remove ceartain folders
        help              Show help

EXAMPLES:
        obsidian-app run
        obsidian-app update
EOF
}

if [[ -z ${1+x} ]]; then
	echo "Error: Need at least one argument"
	show_help
	exit 1
fi

case "$1" in
	run)
		get_obsidian
		echo "Running \"$APP_IMAGE\""
		nohup $APP_IMAGE &>/dev/null
		;;
	install|update) get_obsidian;;
	help) show_help;;
	remove)
		if get_user_choice "Remove $OBSIDIAN?"; then
			rm -rf $OBSIDIAN
		fi
		if get_user_choice "Remove $DESKTOP?"; then
			rm -f $DESKTOP
		fi
		;;
	*)
		echo "Error: Unknown argument \"$1\""
		show_help
		exit 2
		;;
esac
