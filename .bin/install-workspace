#!/usr/bin/env bash

set -eou pipefail
#set -x

WGET_OUTPUT="-q --show-progress"

install_yazi() {
	echo -e "\tInstalling Yazi"
	current_version=""
	if command -v yazi >/dev/null; then
		current_version=$(yazi --version 2>/dev/null | grep -oP 'Yazi \K[0-9.]+' | head -1)
	fi
	local latest_version=$(curl -s "https://api.github.com/repos/sxyazi/yazi/releases/latest" | grep -oP '"tag_name": "v\K[0-9.]+' | head -1)
	if [[ "${current_version}" == "${latest_version}" ]]; then
		echo "Already in the latest version ${latest_version}"
		return
	fi
	if ! command -v rustup >/dev/null; then
		curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
		if [[ "$SHELL" =~ "fish" ]]; then
			source $HOME/.cargo/env.fish
		elif [[ "$SHELL" =~ "nu" ]]; then
			source $HOME/.cargo/env.nu
		else
			source "$HOME/.cargo/env"
		fi
		rustup update
	fi
	
	local YAZI_REPO="/tmp/yazi"
	if [[ ! -d ${YAZI_REPO} ]]; then
		git clone https://github.com/sxyazi/yazi.git ${YAZI_REPO}
	fi
	cd ${YAZI_REPO}
	cargo build --release --locked
	mv target/release/yazi target/release/ya $HOME/.local/bin/
}

install_zoxide() {
	echo -e "\tInstalling Zoxide"
	curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
}

install_lazygit() {
	echo -e "\n\tInstalling Lazygit"
	local old_version=""
	if [[ $(command -v lazygit) ]]; then
		old_version=$(lazygit --version 2>/dev/null | grep -oP 'version=\K[0-9.]+' | head -1)
	fi
	local latest_version=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": *"v\K[^"]*')
	if [[ ${old_version} == ${latest_version} ]]; then
		echo "Already in the latest version ${latest_version}"
		return 0
	fi
	local bin_file="lazygit"
	local tar_file="lazygit.tar.gz"
	cd /tmp
	echo "Downloading latest version (v${latest_version})"
	wget ${WGET_OUTPUT} -O ${tar_file} \
		"https://github.com/jesseduffield/lazygit/releases/download/v${latest_version}/lazygit_${latest_version}_Linux_x86_64.tar.gz"
	echo "Extract ${tar_file}"
	tar xf ${tar_file} ${bin_file}
	echo "Installing lazygit"
	install ${bin_file} -D -t $HOME/.local/bin
}

install_neovim() {
	echo -e "\n\tInstalling Neovim"
	#sudo apt install npm python3-full
	if [[ ! $(command -v nvim) ]]; then
		old_version=""
	else
		old_version=$(nvim --version 2>/dev/null | grep -oP 'v\K[0-9.]+' | head -1)
	fi
	local latest_version=$(curl -s "https://api.github.com/repos/neovim/neovim/releases/latest" | grep -Po '"tag_name": *"v\K[^"]*')
	if [[ ${old_version} == ${latest_version} ]]; then
		echo "Already at the latest version ${latest_version}"
		return 0
	fi
	cd /tmp
	local folder_name="nvim-linux-x86_64"
	local tar_file="/tmp/${folder_name}.tar.gz"
	local folders=("bin" "lib" "share")
	wget ${WGET_OUTPUT} -O ${tar_file} \
		https://github.com/neovim/neovim/releases/latest/download/${folder_name}.tar.gz
	tar -xzf ${tar_file}
	for dir in "${folders[@]}"; do
		cp -R ${folder_name}/${dir}/* $HOME/.local/${dir}
	done
}

install_all() {
	install_zoxide
	install_yazi
	install_neovim
	install_lazygit
}

create_folders() {
	local destination=$1
	local folders=$2

	IFS=' ' read -r -a array_folders <<< "$folders"

	for folder in "${array_folders[@]}"; do
		folder="${destination}/${folder}"
		[[ -d ${folder} ]] && continue

		echo "Creating ${folder}"
		mkdir -p ${folder}
	done
}

clone_dotfiles() {
	local DOTFILES="$HOME/dotfiles"
	if [[ ! -d "${DOTFILES}" ]]; then
		git clone https://github.com/nicosobreira/dotfiles "${DOTFILES}"
	fi
}

show_help() {
	cat << EOF
Usage: $0 [ARGUMENTS]
Arguments:
	--install {app}		App names to install
		name: all nvim lazygit zoxide yazi
	--help			See help
EOF
}

DEPENDENCIES="tree git make gh tmux tar curl wget unzip stow"
HOME_FOLDERS=".config .bin .local"
LOCAL_FOLDERS="bin share state lib"

if [[ $# -eq 0 ]]; then
	echo "Type at least one argument"
	show_help
	exit 1
fi

while [[ $# > 0 ]]; do
	case "$1" in
		--install)
			shift
			echo -e "\tInstalling dependencies: ${DEPENDENCIES}"
			sudo apt install ${DEPENDENCIES}
			create_folders "$HOME" "${HOME_FOLDERS}"
			create_folders "$HOME/.local" "${LOCAL_FOLDERS}"
			clone_dotfiles
			for app in "$@"; do
				case "${app}" in
					neovim) install_neovim;;
					yazi) install_yazi;;
					zoxide) install_zoxide;;
					lazygit) install_lazygit;;
					all)
						install_neovim
						install_yazi
						install_zoxide
						install_lazygit
						;;
					*)
						echo "Unkown app \"${app}\""
						show_help
						exit 2
						;;
				esac
			done
			break
			;;
		--help)
			show_help
			exit 0
			;;
	esac
done
